/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Auth/oauth": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          provider?: string;
          returnUrl?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Auth/oauth/callback": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          returnUrl?: string;
          remoteError?: string;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["OAuthLoginCallbackResponse"];
            "application/json": components["schemas"]["OAuthLoginCallbackResponse"];
            "text/json": components["schemas"]["OAuthLoginCallbackResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Conference/create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateConferenceCommand"];
          "text/json": components["schemas"]["CreateConferenceCommand"];
          "application/*+json": components["schemas"]["CreateConferenceCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CreateConferenceResponse"];
            "application/json": components["schemas"]["CreateConferenceResponse"];
            "text/json": components["schemas"]["CreateConferenceResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Conference/{conferenceId}/join": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: {
          affiliationId?: string;
        };
        header?: never;
        path: {
          conferenceId: number;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["JoinConferenceResponse"];
            "application/json": components["schemas"]["JoinConferenceResponse"];
            "text/json": components["schemas"]["JoinConferenceResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Dictionary/university-names": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: {
          search?: string;
          count?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["UniversityNameModel"][];
            "application/json": components["schemas"]["UniversityNameModel"][];
            "text/json": components["schemas"]["UniversityNameModel"][];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Profile": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateProfileCommand"];
          "text/json": components["schemas"]["CreateProfileCommand"];
          "application/*+json": components["schemas"]["CreateProfileCommand"];
        };
      };
      responses: {
        /** @description Created */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["CreateProfileResponse"];
            "application/json": components["schemas"]["CreateProfileResponse"];
            "text/json": components["schemas"]["CreateProfileResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Profile/email": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SetProfileEmailCommand"];
          "text/json": components["schemas"]["SetProfileEmailCommand"];
          "application/*+json": components["schemas"]["SetProfileEmailCommand"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Profile/orcid": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["SetProfileOrcidCommand"];
          "text/json": components["schemas"]["SetProfileOrcidCommand"];
          "application/*+json": components["schemas"]["SetProfileOrcidCommand"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Profile/affiliations": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["GetAffiliationsResponse"];
            "application/json": components["schemas"]["GetAffiliationsResponse"];
            "text/json": components["schemas"]["GetAffiliationsResponse"];
          };
        };
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["AffiliationModel"];
          "text/json": components["schemas"]["AffiliationModel"];
          "application/*+json": components["schemas"]["AffiliationModel"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CreateAffiliationModel"];
          "text/json": components["schemas"]["CreateAffiliationModel"];
          "application/*+json": components["schemas"]["CreateAffiliationModel"];
        };
      };
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Profile/affiliations/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
        /** @description Server Error */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "text/plain": components["schemas"]["ErrorResult"];
            "application/json": components["schemas"]["ErrorResult"];
            "text/json": components["schemas"]["ErrorResult"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    AddressModel: {
      placeName?: string | null;
      addressLine1?: string | null;
      addressLine2?: string | null;
      city?: string | null;
      zipCode?: string | null;
      country?: string | null;
    };
    AffiliationModel: {
      /** Format: uuid */
      id?: string;
      workplace?: string | null;
      position?: string | null;
      description?: string | null;
      isAcademic?: boolean;
    };
    CreateAffiliationModel: {
      workplace?: string | null;
      position?: string | null;
      description?: string | null;
      isAcademic?: boolean;
    };
    CreateConferenceCommand: {
      name?: string | null;
      description?: string | null;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      /** Format: date-time */
      registrationDeadline?: string;
      /** Format: date-time */
      articlesDeadline?: string;
      /** Format: uuid */
      userAffiliationId?: string;
      isPublic?: boolean;
      address?: components["schemas"]["AddressModel"];
    };
    CreateConferenceResponse: {
      /** Format: int32 */
      id?: number;
    };
    CreateProfileCommand: {
      name?: string | null;
      surname?: string | null;
      degree?: string | null;
      affiliations?: components["schemas"]["CreateAffiliationModel"][] | null;
    };
    CreateProfileResponse: Record<string, never>;
    Error: {
      errorCode?: string | null;
      errorField?: string | null;
      errorMessage?: string | null;
    };
    ErrorResult: {
      errorCode?: string | null;
      errorDescription?: string | null;
      errors?: components["schemas"]["Error"][] | null;
    };
    GetAffiliationsResponse: {
      affiliations?: components["schemas"]["AffiliationModel"][] | null;
    };
    JoinConferenceResponse: Record<string, never>;
    OAuthLoginCallbackResponse: {
      accessToken?: string | null;
      isAccountSetupFinished?: boolean;
      isEmailProvided?: boolean;
    };
    SetProfileEmailCommand: {
      email?: string | null;
    };
    SetProfileOrcidCommand: {
      orcidId?: string | null;
    };
    UniversityNameModel: {
      name?: string | null;
      country?: string | null;
      web_page?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
